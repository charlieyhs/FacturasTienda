/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PaqueteFacturas;

import java.awt.Desktop;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Cell;//celdas
import org.apache.poi.ss.usermodel.Row;//filas
import org.apache.poi.ss.usermodel.Sheet;//hojas
import org.apache.poi.ss.usermodel.Workbook;//archivo excel


import java.awt.print.PrinterException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

import com.jtattoo.plaf.noire.NoireLookAndFeel;

/**
 *
 * @author MARTHA
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    private DefaultComboBoxModel<String> modeloComboSecciones = new DefaultComboBoxModel<String>();
    private DefaultComboBoxModel<String> modeloComboProductos = new DefaultComboBoxModel<String>();
    private DefaultTableModel modeloTabla = new DefaultTableModel();
    DefaultTableModel modelo;
    String opcionF;
    
    int total =0;    
    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        CargarModeloTabla();
        llenarModeloComboBoxSecciones();
        llenarModeloComboBoxProductosFerreteria();
        initComponents();
        setLocationRelativeTo(null);
    }
    
    
    private void llenarModeloComboBoxSecciones(){
        String cadena;
        
        
        //try {
            
            //FileReader lector = new FileReader("C:\\Users\\MARTHA\\Documents\\ArchivosFactura\\Secciones.txt");//Arroja excepcion FileNotFoundException
            
            //BufferedReader lectura = new BufferedReader(lector);//al bufferedReader se le pasa como parametro un archivo de lectura
            
            //cadena = lectura.readLine();//la funcion readLine retorna una excepcion de tipo IOException
            
            
            //while(cadena!=null){
                
                modeloComboSecciones.addElement("Ferreteria");
                modeloComboSecciones.addElement("Papeleria");
                //cadena = lectura.readLine();
            //}
            
            
            
            
       // } catch (FileNotFoundException ex) {
        //    System.err.println("Error, "+ex);
        //} catch (IOException ex) {
        //    System.out.println("Error, "+ex);
            
        //}catch(ArrayIndexOutOfBoundsException ex){
            //System.err.println("Error, bobo "+ex);
       // }catch(RuntimeException ex){
        //    System.err.println("Error, bobo "+ex);
       // }
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem3 = new javax.swing.JMenuItem();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jPanel1 = new javax.swing.JPanel();
        CajaProductos = new javax.swing.JComboBox<>();
        BotonAgregarProductos = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        EtiquetaTotal = new javax.swing.JLabel();
        ComboSecciones = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        BotonEliminarFila = new javax.swing.JButton();
        VerProductos = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuVer = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        MenuAyuda = new javax.swing.JMenu();

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ferreteria Brandon");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CajaProductos.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        CajaProductos.setModel(modeloComboProductos);
        jPanel1.add(CajaProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 260, 30));

        BotonAgregarProductos.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        BotonAgregarProductos.setText("Agregar Producto");
        BotonAgregarProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAgregarProductosActionPerformed(evt);
            }
        });
        jPanel1.add(BotonAgregarProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(485, 90, 130, -1));

        Tabla.setModel(modeloTabla);
        jScrollPane2.setViewportView(Tabla);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 602, 130));

        jButton1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton1.setText("Excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 300, -1, -1));

        jButton2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton2.setText("Imprimir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 300, -1, -1));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Total:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 250, 50, -1));

        EtiquetaTotal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        EtiquetaTotal.setText("0");
        jPanel1.add(EtiquetaTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 250, -1, -1));

        ComboSecciones.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ComboSecciones.setModel(modeloComboSecciones);
        ComboSecciones.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboSeccionesItemStateChanged(evt);
            }
        });
        jPanel1.add(ComboSecciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 20, 260, -1));

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("Agregar Secci√≥n");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, 180, -1));

        BotonEliminarFila.setText("Eliminar Fila");
        BotonEliminarFila.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonEliminarFilaMouseClicked(evt);
            }
        });
        BotonEliminarFila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEliminarFilaActionPerformed(evt);
            }
        });
        jPanel1.add(BotonEliminarFila, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, -1, -1));

        VerProductos.setText("Ver Productos");
        VerProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerProductosActionPerformed(evt);
            }
        });
        jPanel1.add(VerProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 60, 110, -1));

        MenuVer.setText("Articulos");

        jMenu1.setText("Secciones");

        jMenuItem2.setText("Ferreteria");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem4.setText("Papeleria");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        MenuVer.add(jMenu1);

        jMenuBar1.add(MenuVer);

        MenuAyuda.setText("Ayuda");
        MenuAyuda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuAyudaMouseClicked(evt);
            }
        });
        MenuAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuAyudaActionPerformed(evt);
            }
        });
        jMenuBar1.add(MenuAyuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        
        VentanaSeccionFerreteria ventana = new VentanaSeccionFerreteria();
        dispose();
        ventana.setVisible(true);
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        VentanaAgregarSecciones seccion = new VentanaAgregarSecciones();
        
        dispose();
        
        seccion.setVisible(true);
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void CargarModeloTabla(){
        
        modeloTabla.addColumn("Seccion");
        modeloTabla.addColumn("Producto");
        modeloTabla.addColumn("Marca");
        modeloTabla.addColumn("Importado");
        modeloTabla.addColumn("Precio");
        
        
    }
    
    private void BotonAgregarProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAgregarProductosActionPerformed
        // TODO add your handling code here:
       String cadena,fila[];
       String producto,comboProducto;
       int precio;
       if(ComboSecciones.getSelectedItem().toString().equalsIgnoreCase("Ferreteria")){
            try {
                FileReader lector = new FileReader("C:\\Users\\MARTHA\\Documents\\ArchivosFactura\\Ferreteria.txt");//la clase FileReader retorna una excepcion de tipo FileNotFoundException
            
                BufferedReader lectura = new BufferedReader(lector);//al bufferedReader se le pasa como parametro un archivo de lectura
            
                cadena = lectura.readLine();//la funcion readLine retorna una excepcion de tipo IOException
                
                while(cadena!=null){
                
                    fila = cadena.split("%");//La funcion Split corta la cadena cuando encuentre el simbolo %
                    precio = Integer.parseInt(fila[4]);
                    opcionF = fila[0].toString();
                    producto = fila[1].toString();
                    comboProducto = modeloComboProductos.getSelectedItem().toString();

                    if(comboProducto.equals(producto)){
                        modeloTabla.addRow(fila);//Agrega una fila de lo que haya en la variable fila
                        System.out.println("Fila Agregada");
                        total += precio;
                        EtiquetaTotal.setText(String.valueOf(total));
                    }
                    
                    cadena = lectura.readLine();
                }
            } catch (FileNotFoundException ex) {
                System.err.println("Error, "+ex);
            
            }catch (IOException ex) {
            
                System.err.println("Error, "+ex);
            }
        
       }else if(ComboSecciones.getSelectedItem().toString().equalsIgnoreCase("Papeleria")){
           
           
            try {
                FileReader lector2 = new FileReader("C:\\Users\\MARTHA\\Documents\\ArchivosFactura\\Papeleria.txt");//la clase FileReader retorna una excepcion de tipo FileNotFoundException
            
                BufferedReader lectura2 = new BufferedReader(lector2);//al bufferedReader se le pasa como parametro un archivo de lectura
            
                cadena = lectura2.readLine();//la funcion readLine retorna una excepcion de tipo IOException
                
                
                
                while(cadena!=null){
                
                    fila = cadena.split("%");//La funcion Split corta la cadena cuando encuentre el simbolo %
                    precio = Integer.parseInt(fila[4]);
                    opcionF = fila[0].toString();
                    producto = fila[1].toString();
                    comboProducto = modeloComboProductos.getSelectedItem().toString();

                    if(comboProducto.equals(producto)){
                        modeloTabla.addRow(fila);//Agrega una fila de lo que haya en la variable fila
                        System.out.println("Fila Agregada");
                        total += precio;
                        EtiquetaTotal.setText(String.valueOf(total));
                    }
                    cadena = lectura2.readLine();
                }

            } catch (FileNotFoundException ex) {
                System.err.println("Error, "+ex);
            
            }catch (IOException ex) {
            
                System.err.println("Error, "+ex);
            }
       }
        
    }
    
    private void llenarModeloComboBoxProductosPapeleria(){
        
        String elemento;
        
        try{
                FileReader lector2 = new FileReader("C:\\Users\\MARTHA\\Documents\\ArchivosFactura\\ProductosPapeleria.txt");//Arroja excepcion FileNotFoundException
                System.out.println("Archivo Encontrado"); 
                BufferedReader lectura2 = new BufferedReader(lector2);//al bufferedReader se le pasa como parametro un archivo de lectura
            
                elemento = lectura2.readLine();//la funcion readLine retorna una excepcion de tipo IOException
                
                while(elemento!=null){
                    
                    modeloComboProductos.addElement(elemento);
                    
                    elemento = lectura2.readLine();
                   
                }
                
            }catch (FileNotFoundException ex) {
            System.err.println("Error, "+ex);
            } catch (IOException ex) {
            System.out.println("Error, "+ex);
            
            }catch(ArrayIndexOutOfBoundsException ex){
            System.err.println("Error, bobo "+ex);
            }catch(java.lang.NullPointerException ex){
                System.err.println("Error, "+ex);
            }    
        
        
    }    
    private void llenarModeloComboBoxProductosFerreteria(){
        String cadena;
        String elemento;
        
       
            try{
           
                FileReader lector = new FileReader("C:\\Users\\MARTHA\\Documents\\ArchivosFactura\\ProductosFerreteria.txt");//Arroja excepcion FileNotFoundException
                System.out.println("Archivo Encontrado"); 
                BufferedReader lectura = new BufferedReader(lector);//al bufferedReader se le pasa como parametro un archivo de lectura
            
                cadena = lectura.readLine();//la funcion readLine retorna una excepcion de tipo IOException
                
                while(cadena!=null){
                    
                    modeloComboProductos.addElement(cadena);
                    
                    cadena = lectura.readLine();
                   
                }
            
            }catch (FileNotFoundException ex) {
            System.err.println("Error, "+ex);
            } catch (IOException ex) {
            System.out.println("Error, "+ex);
            
            }catch(ArrayIndexOutOfBoundsException ex){
            System.err.println("Error, bobo "+ex);
            }catch(java.lang.NullPointerException ex){
                System.err.println("Error, "+ex);
            }
            
        
            
        
        
    }//GEN-LAST:event_BotonAgregarProductosActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
            Tabla.print();
        } catch (PrinterException ex) {
            System.err.println("Error, "+ex);
            
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         try{
            
            Workbook wb = new XSSFWorkbook();//es un objeto de alto nivel
            //de un archivo y nos permite leer o escribir un libro de trabajo
            
            Sheet sheet = wb.createSheet("Factura");//creamos una hoja en
            //el archivo excel
            
            Row rowCol = sheet.createRow(0);//creamos una fila, le decimos
            //que cree una fila en la hoja que creamos(sheet), y esta fila
            //sera la 0
            
            for(int i=0;i<Tabla.getColumnCount();i++){//contamos
                //cuantas columnas tiene nuestra tabla creada
                Cell cell = rowCol.createCell(i);//entonces desde la 0
                //hasta las columnas que tenga nuestra tabla, empezamos a
                //crear celdas le decimos que cree celda en la fila,
                //creamos celdas hasta igual de columnas que hayan
                
                cell.setCellValue(Tabla.getColumnName(i));//una vez 
                //creada la celda, llamamos la funcion setCellValue, que funciona
                //para colocar un valor a la celda creada, y entonces utilizamos
                //el Nombre, o valor que hay en nuestra jTable en la columna[i]
                
            }//Esto solo para las columnas
            
            for(int j=0;j<Tabla.getRowCount();j++){//contamos cuantas filas
                //hay en nuestra tabla
                
                Row row = sheet.createRow(j+1);//creamos filas en nuestra hoja
                //creada (sheet)
                
                for(int k=0;k<Tabla.getColumnCount();k++){//contamos las columnas
                    //que hay en nuestra jTable
                    
                    Cell cell = row.createCell(k);//Creamos celdas en las filas que hayan
                    
                    //ya que es un bucle anidado, primero se recorre este for(), y poco a 
                    //poco va recorriendo el de afuera, entonces vamos creando celdas
                    //primero por todas las columnas, y poco a poco vamos avanzando en las filas
                    //que es con el bucle de "j"
                    
                    if(Tabla.getValueAt(j,k) != null){//si el valor de las celdas
                        //j,k es diferente de null, o sea, si hay algo dentro de ellas
                        
                        cell.setCellValue(Tabla.getValueAt(j,k).toString());//creamos una celda
                        //y le colocamos como valor lo que hay dentro de la celda (j,k)j representa
                        //las filas y k las columnas, y este valor lo pasamos a String
                        
                        
                    }
                    
                }
                
            }
            FileOutputStream out = new FileOutputStream(new File("C:\\Users\\MARTHA\\Documents\\ArchivosFactura\\Factura.xlsx"));
            //creamos un archivo de FileOutputStream, esto para sacar el archivo, y le decimos
            //que lo guarde en el escritorio
            wb.write(out);//ahora le decimos que el archivo de trabajo creado, escriba todo en el
            //archivo que vamos a sacar
            
            wb.close();//Cerramos el archivo de trabajo para los recursos
            
            out.close();//Cerramos el archivo creado
            
            System.out.println("Archivo Creado");
            }catch(FileNotFoundException ex){
            
            }catch(IOException ex1){
            System.err.println("Error, "+ex1);
            }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void MenuAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuAyudaActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_MenuAyudaActionPerformed

    private void MenuAyudaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuAyudaMouseClicked
        // TODO add your handling code here:
        
        try {
            try {
                // TODO add your handling code here:

                Desktop.getDesktop().browse(new URI("https://www.twago.es/blog/9-secciones-elaborar-buen-plan-negocios/"));
            } catch (IOException ex) {
                
                System.err.println("Error, "+ex);
            }
        } catch (URISyntaxException ex) {
            
            System.err.println("Error, "+ex);
        }
        
    }//GEN-LAST:event_MenuAyudaMouseClicked

    private void BotonEliminarFilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEliminarFilaActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_BotonEliminarFilaActionPerformed

    private void BotonEliminarFilaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonEliminarFilaMouseClicked
        // TODO add your handling code here:
        
        int fila;
        int respuesta;
        try{
            
            fila = Tabla.getSelectedRow();
            
            if(fila ==-1){
                JOptionPane.showMessageDialog(null,"Debe selecionar una fila");
            }else{
                respuesta = JOptionPane.showConfirmDialog(null,"¬øEsta seguro de eliminar este producto?","Eliminar",JOptionPane.YES_NO_OPTION);
                if(respuesta == JOptionPane.YES_OPTION){
                    total -= Integer.parseInt(Tabla.getValueAt(fila,4).toString());
                    EtiquetaTotal.setText(String.valueOf(total));
                    modelo = (DefaultTableModel)Tabla.getModel();
                    modelo.removeRow(fila);
                }
            }
            
        }catch(Exception e){
            System.err.println("error, "+e);
        }
        
    }//GEN-LAST:event_BotonEliminarFilaMouseClicked

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        VentanaSeccionPapeleria seccion = new VentanaSeccionPapeleria();
        dispose();
        seccion.setVisible(true);
        
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void ComboSeccionesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboSeccionesItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboSeccionesItemStateChanged

    private void VerProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerProductosActionPerformed
        // TODO add your handling code here:
        
        System.out.println("antes de if papeleria");
        if(ComboSecciones.getSelectedItem().toString().equalsIgnoreCase("Papeleria")){
            CajaProductos.removeAllItems();
            llenarModeloComboBoxProductosPapeleria();
        }
        else if(ComboSecciones.getSelectedItem().toString().equalsIgnoreCase("Ferreteria")){
            CajaProductos.removeAllItems();
            llenarModeloComboBoxProductosFerreteria();
        }
        System.out.println("despues de if papeleria");
        
    }//GEN-LAST:event_VerProductosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        try {
            //</editor-fold>
            UIManager.setLookAndFeel("com.jtattoo.plaf.noire.NoireLookAndFeel");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonAgregarProductos;
    private javax.swing.JButton BotonEliminarFila;
    private javax.swing.JComboBox<String> CajaProductos;
    private javax.swing.JComboBox<String> ComboSecciones;
    private javax.swing.JLabel EtiquetaTotal;
    private javax.swing.JMenu MenuAyuda;
    private javax.swing.JMenu MenuVer;
    private javax.swing.JTable Tabla;
    private javax.swing.JButton VerProductos;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
